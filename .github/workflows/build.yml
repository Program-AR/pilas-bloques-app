name: build
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      #https://docs.github.com/es/actions/guides/caching-dependencies-to-speed-up-workflows#using-the-cache-action
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - run: npm install

      - name: Run tests
        run: xvfb-run -a npm run test

  pack-linux: # When there is a tag, pack the installers and upload to Github.
      runs-on: ubuntu-latest
      env:
        VITE_API_URL: ${{ secrets.API_URL }}
        VITE_PB_APP_URL: ${{ secrets.APP_URL }}
        VITE_GOOGLE_ANALYTICS_KEY: ${{ secrets.GOOGLE_ANALYTICS_KEY }}
        VITE_VERSION: ${{github.ref_name}}
      if: startsWith(github.ref, 'refs/tags')
      needs: test
      steps:
        - uses: actions/checkout@v3
        - uses: actions/setup-node@v3
          with:
            node-version-file: '.nvmrc'
        - run: npm install
        - run: npm run build
        - run: npm run pack:linux
        - run: npm run pack:html
        - uses: ncipollo/release-action@v1
          with:
            allowUpdates: true
            artifacts: "binaries/*.zip,binaries/*.deb,binaries/*.tar.gz"
            token: ${{ secrets.GITHUB_TOKEN }}

  pack-macos: # When there is a tag, pack the installers and upload to Github.
    runs-on: macos-latest
    env:
      VITE_API_URL: ${{ secrets.API_URL }}
      VITE_PB_APP_URL: ${{ secrets.APP_URL }}
      VITE_GOOGLE_ANALYTICS_KEY: ${{ secrets.GOOGLE_ANALYTICS_KEY }}
      VITE_VERSION: ${{github.ref_name}}
    if: startsWith(github.ref, 'refs/tags')
    needs: test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - run: npm install
      - run: npm run build
      - run: npm run pack:osx
      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "binaries/*.dmg"
          token: ${{ secrets.GITHUB_TOKEN }}

  pack-windows: # When there is a tag, pack the installers and upload to Github.
    runs-on: windows-latest
    env:
      VITE_API_URL: ${{ secrets.API_URL }}
      VITE_PB_APP_URL: ${{ secrets.APP_URL }}
      VITE_GOOGLE_ANALYTICS_KEY: ${{ secrets.GOOGLE_ANALYTICS_KEY }}
      VITE_VERSION: ${{github.ref_name}}
    if: startsWith(github.ref, 'refs/tags')
    needs: test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - run: npm install
      - run: npm run build
      - run: npm run pack:win
      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "binaries/*.zip,binaries/*.exe"
          token: ${{ secrets.GITHUB_TOKEN }}

  publish-surge: # When there is a push in develop, publish on surge
    runs-on: ubuntu-latest
    env:
      VITE_APP_API_URL: ${{ secrets.API_URL }}
      VITE_APP_PB_APP_URL: ${{ secrets.APP_URL }}
      VITE_APP_GOOGLE_ANALYTICS_KEY: ${{ secrets.GOOGLE_ANALYTICS_KEY }}
      VITE_APP_VERSION: ${{github.ref_name}}
    if: false 
    #github.event_name == 'push' && github.ref == 'refs/heads/develop'
    needs: test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
      - run: npm install
      - run: npm run build
      - name: Deploy to pbdevelop.surge.sh
        uses: dswistowski/surge-sh-action@v1
        with:
          domain: 'pbdevelop.surge.sh'
          project: 'dist/'
          login: ${{ secrets.SURGE_LOGIN }}
          token: ${{ secrets.SURGE_TOKEN }}